{"version":3,"sources":["components/cards/ColorCard.js","utils/colorCalculation.js","views/SingleView.js","utils/firebase.js","views/ListView.js","constants/colors.js","assets/images/hh-logo.svg","components/navigation/NavDrawer.js","App.js","index.js"],"names":["ColorCard","props","history","useHistory","clickHandler","color","linkEnabled","push","substring","copy","message","success","content","toUpperCase","duration","icon","CheckCircleOutlined","style","isMini","className","background","onClick","randomHex","hex","Math","floor","random","toString","createSwatch","swatch","forEach","percentage","percent","R","parseInt","G","B","length","changeHexShade","SingleColor","state","nextProps","a","this","initColors","match","params","toLowerCase","setState","justify","span","map","xs","sm","md","lg","paddingBottom","type","block","ArrowLeftOutlined","to","React","Component","firebase","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","ListView","colorList","total","pageItems","currentPage","componentDidMount","ref","on","snap","colors","Object","values","val","slice","generateColorList","list","i","paginate","page","pageSize","start","end","xl","padding","defaultCurrent","onChange","red","orange","yellow","green","blue","purple","brown","gray","NavDrawer","colorItems","keys","isCollapsed","collapsed","src","HHLogo","preview","defaultSelectedKeys","mode","height","Item","QuestionCircleOutlined","SmileOutlined","charAt","Sider","Layout","Header","Content","App","toggleDrawer","basename","trigger","collapsible","createElement","MenuUnfoldOutlined","MenuFoldOutlined","exact","path","component","SingleView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f638f7f.chunk.js","sourcesContent":["import React from \"react\";\nimport { message } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { CheckCircleOutlined } from \"@ant-design/icons\";\n\nimport copy from \"copy-to-clipboard\";\n\nexport default function ColorCard(props) {\n  let history = useHistory();\n\n  const clickHandler = (color) => {\n    if (props.linkEnabled) {\n      history.push(`/color/${color.substring(1)}`);\n    } else {\n      copy(color);\n      message.success({\n        content: `Color copied to clipboard: ${color.toUpperCase()}`,\n        duration: 2,\n        icon: <CheckCircleOutlined style={{ color: color }} />,\n      });\n    }\n  };\n\n  if (props.isMini) {\n    return (\n      <div className=\"color-card\">\n        <div\n          className=\"color-mini__hue\"\n          style={{ background: `${props.color}` }}\n          onClick={() => clickHandler(props.color)}\n        ></div>\n\n        <div className=\"color-text\">{props.color.toUpperCase()}</div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"color-card\">\n        <div\n          className=\"color-main__hue\"\n          style={{ background: `${props.color}` }}\n          onClick={() => clickHandler(props.color)}\n        />\n\n        <div className=\"color-text\">{props.color.toUpperCase()}</div>\n      </div>\n    );\n  }\n}\n","export const randomHex = () => {\n  let hex = Math.floor(Math.random() * 16777215).toString(16);\n  return `#${hex}`;\n};\n\nexport const changeHexShade = (color, percent) => {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n\n  R = parseInt((R * (100 + percent)) / 100);\n  G = parseInt((G * (100 + percent)) / 100);\n  B = parseInt((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  var RR = R.toString(16).length === 1 ? \"0\" + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length === 1 ? \"0\" + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length === 1 ? \"0\" + B.toString(16) : B.toString(16);\n\n  return \"#\" + RR + GG + BB;\n};\n\nexport const createSwatch = (color) => {\n  let percentages = [-60, -30, 0, 30, 60];\n  let swatch = [];\n  percentages.forEach((percentage) => {\n    swatch.push(changeHexShade(color, percentage));\n  });\n\n  return swatch;\n};\n","import React from \"react\";\nimport ColorCard from \"../components/cards/ColorCard\";\nimport { Button, Row, Col } from \"antd\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport { createSwatch, randomHex } from \"../utils/colorCalculation\";\n\nclass SingleColor extends React.Component {\n  state = {\n    color: \"\",\n    swatch: [],\n  };\n\n  async componentWillReceiveProps(nextProps) {\n    await nextProps;\n    this.initColors();\n  }\n\n  componentDidMount() {\n    this.initColors();\n  }\n\n  async initColors() {\n    let color = await this.props.match.params.color.toLowerCase();\n\n    if (color !== \"random\") {\n      await this.setState({ color: `#${color}` });\n    } else {\n      await this.setState({ color: randomHex() });\n    }\n\n    let swatch = createSwatch(this.state.color);\n    this.setState({ swatch: swatch });\n  }\n\n  render() {\n    if (this.state.swatch.length > 0) {\n      return (\n        <div className=\"single-color__container\">\n          <Row className=\"single-color__row\" justify=\"space-around\">\n            <Col span={24}>\n              <ColorCard\n                color={this.state.color}\n                isMini={false}\n                linkEnabled={false}\n              />\n            </Col>\n          </Row>\n          <Row className=\"single-color__row\" justify=\"space-between\">\n            {this.state.swatch.map((color) => (\n              <Col\n                xs={24}\n                sm={24}\n                md={4}\n                lg={4}\n                key={color}\n                style={{ paddingBottom: \"40px\" }}\n              >\n                <ColorCard color={color} isMini={true} linkEnabled={false} />\n              </Col>\n            ))}\n          </Row>\n          <Button\n            className=\"button-back\"\n            type=\"link\"\n            block\n            icon={<ArrowLeftOutlined />}\n          >\n            <Link to={\"/list\"}> Back to List</Link>\n          </Button>\n        </div>\n      );\n    } else {\n      return <h1>LOADING</h1>;\n    }\n  }\n}\n\nexport default SingleColor;\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst initFirebase = () => {\n  if (!firebase.apps.length) {\n    firebase.initializeApp({\n      apiKey: \"AIzaSyCTw5B5p0PZP5HAYsUulH-ts7VeTF3ByOc\",\n      authDomain: \"hh-challenge.firebaseapp.com\",\n      projectId: \"hh-challenge\",\n      storageBucket: \"hh-challenge.appspot.com\",\n      messagingSenderId: \"792308958562\",\n      appId: \"1:792308958562:web:3d5007f4e2432e290e983b\",\n      measurementId: \"G-BW5BBXMQQG\",\n    });\n  }\n};\n\ninitFirebase();\n\nexport { firebase };\n","import React from \"react\";\nimport ColorCard from \"../components/cards/ColorCard\";\nimport { Row, Col, Pagination } from \"antd\";\nimport { randomHex } from \"../utils/colorCalculation\";\nimport { firebase } from \"../utils/firebase\";\nconst db = firebase.database();\n\nclass ListView extends React.Component {\n  state = {\n    colorList: [],\n    total: 0,\n    pageItems: [],\n    currentPage: 1,\n  };\n\n  componentDidMount = () => {\n    const ref = db.ref(\"list\");\n    ref.on(\"value\", async (snap) => {\n      let colors = Object.values(snap.val());\n\n      await this.setState({\n        colorList: colors,\n        total: colors.length,\n        pageItems: colors.slice(0, 12),\n      });\n    });\n  };\n\n  generateColorList = async () => {\n    let list = [];\n    for (let i = 0; i < 144; i++) {\n      list.push(randomHex());\n    }\n    await this.setState({\n      colorList: list,\n      total: list.length,\n      pageItems: list.slice(0, 12),\n    });\n  };\n\n  paginate = (page, pageSize) => {\n    let start = (page - 1) * pageSize;\n    let end = start + pageSize;\n    let pageItems = this.state.colorList.slice(start, end);\n    this.setState({ currentPage: page, pageItems: pageItems });\n  };\n\n  render() {\n    if (this.state.colorList.length)\n      return (\n        <div className=\"list-color__container\">\n          <Row className=\"list-color__row\" justify=\"space-between\">\n            {this.state.pageItems.map((color) => (\n              <Col\n                xs={24}\n                sm={12}\n                md={8}\n                lg={6}\n                xl={4}\n                style={{ padding: \"20px\" }}\n                key={color}\n              >\n                <ColorCard color={color} isMini={true} linkEnabled={true} />\n              </Col>\n            ))}\n          </Row>\n          <Row justify=\"center\">\n            <Col>\n              <Pagination\n                defaultCurrent={1}\n                pageSize={12}\n                total={this.state.total}\n                onChange={this.paginate}\n              />\n            </Col>\n          </Row>\n        </div>\n      );\n    else return \"LOADING\";\n  }\n}\n\nexport default ListView;\n","export const colorList = {\n  red: \"f5222d\",\n  orange: \"fa8c16\",\n  yellow: \"fadb14\",\n  green: \"52c41a\",\n  blue: \"1890ff\",\n  purple: \"722ed1\",\n  brown: \"ad6800\",\n  gray: \"bfbfbf\",\n};\n","export default __webpack_public_path__ + \"static/media/hh-logo.5a22712c.svg\";","import { Image, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { colorList } from \"../../constants/colors\";\nimport { QuestionCircleOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport HHLogo from \"../../assets/images/hh-logo.svg\";\n\nfunction NavDrawer(props) {\n  let colorItems = Object.keys(colorList);\n  let isCollapsed = props.collapsed;\n\n  return (\n    <div>\n      <div className=\"logo\">\n        {isCollapsed && <Image src={HHLogo} preview={false} />}\n        {!isCollapsed && <p className=\"logo-text\">HELPFUL HUMAN</p>}\n      </div>\n      <Menu\n        defaultSelectedKeys={[\"1\"]}\n        mode=\"inline\"\n        style={{ height: \"90vh\" }}\n      >\n        <Menu.Item icon={<QuestionCircleOutlined />}>\n          <Link to={\"/color/random\"}>Random</Link>\n        </Menu.Item>\n        {colorItems.map((color) => (\n          <Menu.Item\n            key={color}\n            icon={<SmileOutlined style={{ color: `#${colorList[color]}` }} />}\n          >\n            <Link to={`/color/${colorList[color]}`}>\n              {color.charAt(0).toUpperCase() + color.slice(1)}\n            </Link>\n          </Menu.Item>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nexport default NavDrawer;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./styles/App.css\";\n\n// Views\nimport SingleView from \"./views/SingleView\";\nimport ListView from \"./views/ListView\";\n\n// App Navigation\nimport NavDrawer from \"./components/navigation/NavDrawer\";\n\n// Ant Design Imports\nimport \"antd/dist/antd.css\";\nimport { Layout } from \"antd\";\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\nconst { Sider, Header, Content } = Layout;\n\nclass App extends React.Component {\n  state = {\n    collapsed: true,\n  };\n\n  toggleDrawer = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename=\"/helpful-human-challenge\">\n          <Layout className=\"site-layout\">\n            <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n              <NavDrawer collapsed={this.state.collapsed} />\n            </Sider>\n            <Layout className=\"site-layout\">\n              <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n                {React.createElement(\n                  this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n                  {\n                    className: \"menu-trigger\",\n                    onClick: this.toggleDrawer,\n                  }\n                )}\n              </Header>\n              <Content className=\"site-layout-background\">\n                <Switch>\n                  <Route exact path=\"/list\" component={ListView} />\n                  <Route exact path=\"/\">\n                    <Redirect to=\"/color/random\" />\n                  </Route>\n                  <Route path=\"/color/:color\" component={SingleView} />\n                </Switch>{\" \"}\n              </Content>\n            </Layout>\n          </Layout>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}